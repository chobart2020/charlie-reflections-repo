How did viewing a diff between two versions of a file help you see the bug that
was introduced?
I only looked at the lines that had been changed from the old file.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

   one could reuse/learn from old code as a platform for new code.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

manual
pros:you can save files at a logical time
cons: you might forget to save files

auto
pros: a backup incase you forget to save
cons: You might have a commit auto saved at an inconvenient time so when revising code

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?


files in google docs are usually unrelated and independent to other files, while git treats the files as a project, where different files are dependent on one another

How can you use the commands git log and git diff to view the history of files?

  git log will show all commits for a file, with the specifications of that file save, ie, author name, timestamp, etc.

git diff commands will show you the differences between older and newer files


How might using version control make you more confident to make changes that
could break something?

  I can always go back to an old commit if a bug was introduced and I can just go back and edit it.

Now that you have your workspace set up, what do you want to try using Git for?

 Big, long-term projects
